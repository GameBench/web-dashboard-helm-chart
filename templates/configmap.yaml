apiVersion: v1
data:
  ALLOW_FREE_USER_SIGNUP: "false"
  BACKEND_URL: {{ printf "%s://%s:%s" .Values.application.urlScheme .Values.application.host .Values.application.port }}
  DEFAULT_SUBTYPE: company
  ES_HOST: "{{.Values.elasticsearch.host}}"
  ES_PORT: "{{.Values.elasticsearch.port}}"
  ES_SSL: "{{.Values.elasticsearch.ssl}}"
  FILE_STORAGE_DISK_BASE_PATH: /var/gamebench/data/storage
  FRONTEND_URL: {{ printf "%s://%s:%s" .Values.application.urlScheme .Values.application.host .Values.application.port }}
  GB_BASE_PATH: /var/gamebench/data
  GB_LICENSE_PATH: /var/gamebench/license
  {{ if .Values.logLevel }}
  LOG_LEVEL: "{{.Values.logLevel}}"
  {{ end }}
  MAIL_FROM: "{{ .Values.smtp.from }}"
  MAIL_HOST: "{{ .Values.smtp.host }}"
  MAIL_PORT: "{{.Values.smtp.port}}"
  MAIL_TLS: "{{.Values.smtp.tls}}"
  NODE_ENV: production
  POSTGRES_DATABASE: "{{.Values.postgres.database}}"
  POSTGRES_HOST: "{{.Values.postgres.host}}"
  POSTGRES_PORT: "{{.Values.postgres.port}}"
  REDIS_HOST: "{{.Values.redis.host}}"
  REDIS_PORT: "{{.Values.redis.port}}"
kind: ConfigMap
metadata:
  name: {{ template "gamebench.fullname" . }}
  namespace: {{.Release.Namespace}}
  labels:
    app: {{ template "gamebench.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
